#+TITLE: Zastosowanie funkcyjnego paradygmatu do tworzenia graficznego środowiska programistycznego
#+AUTHOR: Łukasz Czapliński
#+OPTIONS: H:2
#+STARTUP: beamer
#+BEAMER_COLOR_THEME:
#+BEAMER_FONT_THEME:
#+BEAMER_HEADER: \institute{Wydział Matematyki i Informatyki UWr}\subtitle{Praca magisterska pod opieką dra hab. Dariusza Biernackiego}
#+BEAMER_INNER_THEME:
#+BEAMER_OUTER_THEME:
#+BEAMER_THEME: Madrid
#+LATEX_CLASS: beamer
* Omówienie problemu
** Ekrany dotykowe jako główna metoda interakcji z komputerem
[[./img/studio.png]]
** Rozwiązanie: programowanie przez diagramy
#+CAPTION[]: \small{Copyright Warner Bros. Television}
[[./img/whiteboard.jpg]]
** Graficzne języki programowania - Scratch
 # Prosty graficzny język, do nauki programowania. Doskonale spełnia swoje zadanie, ale nie nadaje się do ogólnych zastosowań.
*** Tekst
    :PROPERTIES:
      :BEAMER_col: 0.4
    :END:
      - Lifelong Kindergarten Group, MIT, 2005
      - edukacyjny, dla dzieci w wieku 8-16 lat
      - pozwala na tworzenie interaktywnych scen
      - przypomina układanie puzzli
*** Screenshot
    :PROPERTIES:
      :BEAMER_col: 0.6
    :END:
    #+ATTR_LATEX: :width 0.8\textwidth
[[file:./img/s-puzzle.png]]
** Graficzne języki programowania - Blueprints
*** Tekst
    :PROPERTIES:
      :BEAMER_col: 0.4
    :END:
      - Unreal Engine, Epic, 2014
      - pisanie poziomów gier
      - dla developerów, nie programistów
      - łączenie węzłów - druty symbolizują przepływ danych oraz wykonanie programu
*** Screenshot
    :PROPERTIES:
      :BEAMER_col: 0.6
    :END:
[[file:./img/b-wires.png]]
** Graficzne języki programowania
*** Zalety
    + Prostsze w nauce
    + Doskonałe dla ekranów dotykowych
    + Dopasowane do swoich nisz
*** Wady
    - Brak graficznego języka programowania ogólnego zastosowania
    - Egzotyczne sposoby zapisu
** Przeszkody w zdobyciu popularności - Edytory
*** Screenshot 1
    :PROPERTIES:
      :BEAMER_col: 0.4
    :END:
[[file:./img/scratch-project-listing.png]]
*** Screenshot 2
    :PROPERTIES:
      :BEAMER_col: 0.6
    :END:
[[file:./img/scratch-project-json.png]]
** Przeszkody w zdobyciu popularności - Systemy kontroli wersji
*** Pliki projektu są wykrywane jako binarne.
[[file:./img/scratch-git-reaction.png]]
** Przeszkody w zdobyciu popularności - Code Review
[[file:./img/scratch-cr.png]]
* Cel
** Cel
  + Graficzne środowisko programistyczne
  + Łatwa integracja z isniejącym systemem - znany język
  + Łatwa integracja z isniejącym systemem - czytelny format zapisu
  + Przygotowane do programowania na ekranach dotykowych
  + Integracja z narzędziami dla programistów
# Powinno być równie prosto jak w przypadku tradycyjnych edytorów
# REPL!
* Realizacja
** Realizacja: Język - Clojure
** Realizacja: Technologia - Electron + Clojurescript
** Realizacja: Integracja z REPLem
* Wyniki
** Wyniki - Jarvis
* Wnioski i wyzwania na przyszłość
** Problemy
  - Brak wsparcia dla wszystkich struktur Clojure
  - Brak wsparcia dla makr
** Możliwe ulepszenia
  - Inne reprezentacja kodu
  - Lepsza interakcja z użytkownikiem
